# -*- conf -*-
# BeagleG configuration file for UVA Reporter pen plotter
# Pass to machine-control with -c <config-file> option.
##

[ General ]
# Homing order
home-order        = YZ  # Home Y (pen holder) and Z (paper cutter)
require-homing    = no  # G28 will get added directly to the GCODE because we might not want to home every single time
range-check       = yes # Check that axes are within range. Dangerous if no
auto-motor-disable-seconds = 120  # Switch off motors after 2min of inactivity

# -- Logical axis configuration

[ X-Axis ]
# Paper feed axis
# The stepper motor has 400 full steps per turn. 32x microstepping.
# One turn of the motor moves the roller 47.12388mm (15mm diameter)
steps-per-mm     = 32 * 400 / 47.12388
max-feedrate     = 100   # mm/s
max-acceleration = 500   # mm/s^2
range            = 20000 # mm - 20m max
# No homing switch

[ Y-Axis ]
# Pen holder linear axis
# The stepper has 400 full steps per turn. 32x microstepping.
# One turn of the motor moves the toother belt 40mm.
steps-per-mm     = 32 * 400 / 40
max-feedrate     = 100  # mm/s
max-acceleration = 400  # mm/s^2
range            = 139  # mm - max arm travel
home-pos         = min  # homing switch is at the minimum of the travel (i.e. 0)

[ Z-Axis ]
# Paper cutter
# Most the same as Y-Axis but a bit less travel distance
steps-per-mm     = 32 * 400 / 40
max-feedrate     = 100  # mm/s
max-acceleration = 400  # mm/s^2
range            = 130  # mm - max arm travel
home-pos         = min  # homing switch is at the minimum of the travel (i.e. 0)

[ E-Axis ]
# Paper spool
# This axis needs to rotate constantly at a given velocity.
# The stepper has 400 full steps per turn. 1x microstepping.
steps-per-mm     = 400 / 40 # double check this
max-feedrate     = 100      # double check this
max-acceleration = 100      # double check this

# Hardware mapping; which axes and switches are connected to which logical units.

[ Motor-Mapping ]
# If you don't happen to have a motor-mapping section, motors are assigned
# for the configured axis above in sequence XYZEABCUVW
motor_1 = axis:-x   # Paper feed: axis is negative because of how the machine is built
motor_2 = axis:-y   # Pen holder
motor_3 = axis:z    # Paper cutter
motor_4 = axis:e    # Paper spool

[ Switch-Mapping ]
# These switches trigger on high: when activated, they generate a pos level.
switch_2 = active:high min_y
switch_3 = active:high min_z

# You can have multiple switches wired together in case you only have a limited
# number of inputs or want to simplify wiring (put them electrically in series
# or parallel to get a logical 'or' to reach the switching level if either
# of these trigger). It is probably a good idea to have home-switches independent
# of each other, while lumping together all the limit switches (only used for
# exceptions anyway) can simplify wiring.
#switch_4 = active:high max_y max_y

# An example of a switch that triggers on low.
#switch_5 = active:low max_z

# In the beagleg-pin-mapping.h, additional AUX pins are chosen that can
# be connected to various functions here. Valid logical names are one of
# mist, flood, vacuum, spindle, spindle-speed, spindle-dir, cooler, case-lights,
# fan, hotend, heatedbed, led, atx-power, estop.
# All of these can be GCode controlled with various G or M codes (See G-code.md).
[ Aux-Mapping ]
# Nothing 

[ PWM-Mapping ]
pwm_1 = spindle-speed # Timer 4 - PIN P8.07

[ Spindle ]
type = simple-pwm     # Servo spindle is used to control a simple hobby servo
max-rpm = 4800        # Maximum speed at full PWM. See also PWM-mapping section.
pwr-delay-msec = 400
on-delay-msec = 100
off-delay-msec = 100
allow-ccw = false